{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dogu\\\\Desktop\\\\power-multiplier\\\\src\\\\components\\\\Weapons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TextField, Button, List, ListItem, ListItemText, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weapons = () => {\n  _s();\n  const [weapons, setWeapons] = useState([{\n    name: \"Pistol\",\n    quantity: 0,\n    points: 0\n  }, {\n    name: \"Rifle\",\n    quantity: 0,\n    points: 0\n  }, {\n    name: \"Shotgun\",\n    quantity: 0,\n    points: 0\n  }\n  // Diğer silahları ekleyebilirsiniz\n  ]);\n  const calculateTotalPower = () => {\n    let totalPower = 0;\n    weapons.forEach(weapon => {\n      totalPower += weapon.quantity * weapon.points;\n    });\n    return totalPower;\n  };\n  const handleQuantityChange = (index, value) => {\n    const newWeapons = [...weapons];\n    newWeapons[index].quantity = parseInt(value, 10) || 0;\n    setWeapons(newWeapons);\n  };\n  const handlePointsChange = (index, value) => {\n    const newWeapons = [...weapons];\n    newWeapons[index].points = parseInt(value, 10) || 0;\n    setWeapons(newWeapons);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: weapons.map((weapon, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: weapon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Adet\",\n          type: \"number\",\n          value: weapon.quantity,\n          onChange: e => handleQuantityChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Puan\",\n          type: \"number\",\n          value: weapon.points,\n          onChange: e => handlePointsChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: \"10px\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Toplam G\\xFC\\xE7 \\xC7arpan\\u0131:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" \", calculateTotalPower()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Weapons, \"ACt2Qqmwhxt0uwkpP/49OdOpwZI=\");\n_c = Weapons;\nexport default Weapons;\nvar _c;\n$RefreshReg$(_c, \"Weapons\");","map":{"version":3,"names":["React","useState","TextField","Button","List","ListItem","ListItemText","Paper","jsxDEV","_jsxDEV","Weapons","_s","weapons","setWeapons","name","quantity","points","calculateTotalPower","totalPower","forEach","weapon","handleQuantityChange","index","value","newWeapons","parseInt","handlePointsChange","children","map","primary","fileName","_jsxFileName","lineNumber","columnNumber","label","type","onChange","e","target","elevation","style","padding","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/dogu/Desktop/power-multiplier/src/components/Weapons.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n} from \"@mui/material\";\r\n\r\nconst Weapons = () => {\r\n  const [weapons, setWeapons] = useState([\r\n    { name: \"Pistol\", quantity: 0, points: 0 },\r\n    { name: \"Rifle\", quantity: 0, points: 0 },\r\n    { name: \"Shotgun\", quantity: 0, points: 0 },\r\n    // Diğer silahları ekleyebilirsiniz\r\n  ]);\r\n\r\n  const calculateTotalPower = () => {\r\n    let totalPower = 0;\r\n    weapons.forEach((weapon) => {\r\n      totalPower += weapon.quantity * weapon.points;\r\n    });\r\n    return totalPower;\r\n  };\r\n\r\n  const handleQuantityChange = (index, value) => {\r\n    const newWeapons = [...weapons];\r\n    newWeapons[index].quantity = parseInt(value, 10) || 0;\r\n    setWeapons(newWeapons);\r\n  };\r\n\r\n  const handlePointsChange = (index, value) => {\r\n    const newWeapons = [...weapons];\r\n    newWeapons[index].points = parseInt(value, 10) || 0;\r\n    setWeapons(newWeapons);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        {weapons.map((weapon, index) => (\r\n          <ListItem key={index}>\r\n            <ListItemText primary={weapon.name} />\r\n            <TextField\r\n              label=\"Adet\"\r\n              type=\"number\"\r\n              value={weapon.quantity}\r\n              onChange={(e) => handleQuantityChange(index, e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Puan\"\r\n              type=\"number\"\r\n              value={weapon.points}\r\n              onChange={(e) => handlePointsChange(index, e.target.value)}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Paper elevation={3} style={{ padding: \"10px\", marginTop: \"20px\" }}>\r\n        <strong>Toplam Güç Çarpanı:</strong> {calculateTotalPower()}\r\n      </Paper>\r\n      {/* Dilediğiniz şekilde stil ekleyebilirsiniz */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weapons;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}